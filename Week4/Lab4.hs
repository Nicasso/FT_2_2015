module Lab4 where

import Data.List
import System.Random
import Test.QuickCheck 
import SetOrd

-- 1. --------------------------------------------------




-- 2. --------------------------------------------------




-- 3. --------------------------------------------------




-- 4. --------------------------------------------------




-- 5. --------------------------------------------------
-- Time spent: 1 Hour

type Rel a = [(a,a)]

symClos :: Ord a => Rel a -> Rel a
symClos [] = []
symClos (x:xs) = inversePair x ++ symClos xs

inversePair :: (Eq a) => (a,a) -> Rel a
inversePair (a,b) = if (a /= b) then [(a,b),(b,a)] else [(a,b )]

-- 6. --------------------------------------------------




-- 7. --------------------------------------------------




-- 8. --------------------------------------------------




-- 9. --------------------------------------------------




-- 10. --------------------------------------------------